name: Release

on:
  workflow_dispatch:

jobs:
  build-python-wheels:
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest          # aarch64
          - windows-latest
    defaults:
      run:
        shell: bash               # required for windows

    runs-on: ${{ matrix.os }}
    
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Python
        uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1
        with:
          version: 2.1.3
          virtualenvs-create: false

      - name: Install Global Plugins # (needed for windows due to separate C:\ and D:\ drives)
        if: runner.os == 'Windows'
        run: poetry self add "poethepoet[poetry-plugin]>=0.35.0,<0.36.0"

      - name: Build Wheel
        run: |
          poetry --project iceoryx2-ffi/python install
          poetry --project iceoryx2-ffi/python build-wheel

      - name: Upload Wheel
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: wheels-${{ runner.os }}-${{ runner.arch }}-${{ github.sha }}
          path: target/ff/python/dist
          retention-days: 7

  prepare-python-dist:
    needs: [build-python-wheels]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install Poetry
        uses: snok/install-poetry@76e04a911780d5b312d89783f7b1cd627778900a # v1
        with:
          version: 2.1.3
          virtualenvs-create: false

      - name: Download Wheels
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          pattern: wheels-*-${{ github.sha }}
          path: dist
          merge-multiple: true

      - name: Build source distribution
        run: |
          # Build
          poetry --project iceoryx2-ffi/python install
          poetry --project iceoryx2-ffi/python build-sdist

          cp target/ff/python/dist/*.tar.gz dist/
          
          # Validate
          echo "Validating wheels..."
          if ls dist/*.whl 1> /dev/null 2>&1; then
            poetry --project iceoryx2-ffi/python run twine check dist/*.whl
          else
            echo "No wheel files to validate"
          fi

      - name: Upload Distribution
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: python-dist-${{ github.sha }}
          path: dist/
          retention-days: 7

      - name: Display distribution summary
        run: |
          echo "Generated Python dist with contents:"
          for file in dist/*; do
            if [ -f "$file" ]; then
              echo "$(basename "$file"): $(stat -c%s "$file") bytes"
            fi
          done
