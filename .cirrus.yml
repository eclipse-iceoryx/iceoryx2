#
# Notes
#
# Cirrus CI has a concurrency limit of 24 CPU cores for open source projects.
# This means we should not have more than 12 pipelines with more than 2 CPUs
# in each pipeline running parallel
#
# Documentation:
# - https://cirrus-ci.org/examples/
# - https://cirrus-ci.org/guide/writing-tasks/
#

---

#
# Global environment variables
#

env:
  CI_ENABLED: false
  # RUSTFLAGS: "-C debug-assertions"

#
# Filter to run the CI only on the main branch or for pull request to the main branch
#

# TODO: check why !$CIRRUS_PR_DRAFT breaks the CI on the main branch
only_if: $CI_ENABLED && ( $CIRRUS_BRANCH == 'main' || ($CIRRUS_PR != '' && $CIRRUS_BASE_BRANCH == 'main'))

#
# Templates
#

# Constants

iox2_task_timeout_template: &IOX2_TASK_TIMEOUT
  timeout_in: 45m  # This needs to be reasonable large in order not to run in a timeout in the docker image re-builds

iox2_common_cpu_and_memory_config_for_build_and_test_template: &IOX2_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST
  cpu: 2
  memory: 4GB

# Container

iox2_container_ubuntu_22_04_x64_template: &IOX2_CONTAINER_UBUNTU_22_04_X64
  <<: *IOX2_TASK_TIMEOUT
  container:
    dockerfile: internal/docker/ubuntu-22.04
    <<: *IOX2_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST

iox2_container_ubuntu_22_04_aarch64_template: &IOX2_CONTAINER_UBUNTU_22_04_AARCH64
  <<: *IOX2_TASK_TIMEOUT
  arm_container:
    dockerfile: internal/docker/ubuntu-22.04
    <<: *IOX2_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST

iox2_container_arch_linux_x64_template: &IOX2_CONTAINER_ARCH_LINUX_X64
  <<: *IOX2_TASK_TIMEOUT
  container:
    dockerfile: internal/docker/archlinux-base-devel
    <<: *IOX2_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST

iox2_container_windows_server_2019_x64_template: &IOX2_CONTAINER_WINDOWS_SERVER_2019_X64
  <<: *IOX2_TASK_TIMEOUT
  windows_container:
    dockerfile: internal/docker/windowsservercore-2019
    <<: *IOX2_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST

iox2_container_freebsd_x64_template: &IOX2_CONTAINER_FREEBSD_X64
  <<: *IOX2_TASK_TIMEOUT
  freebsd_instance:
    image_family: freebsd-14-0
    <<: *IOX2_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST

iox2_container_macos_aarch64_template: &IOX2_CONTAINER_MACOS_AARCH64
  <<: *IOX2_TASK_TIMEOUT
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-base:latest
    <<: *IOX2_COMMON_CPU_AND_MEMORY_CONFIG_FOR_BUILD_AND_TEST

# Build and Test

iox2_cargo_fmt_and_clippy_template: &IOX2_CARGO_FMT_AND_CLIPPY
  cargo_fmt_and_clippy_script:
    - cargo fmt --all -- --check
    - cargo clippy -- -D warnings

iox2_clang_format_and_clang_tidy_template: &IOX2_CLANG_FORMAT_AND_CLANG_TIDY
  clang_format_and_clang_tidy_script:
    - git ls-files | grep -E "\.(c|cc|cpp|cxx|inl|h|hh|hpp|hxx)$" | xargs clang-format -i -style=file --Werror --dry-run
    - git fetch origin main # required to make diff-to-main work
    - internal/scripts/clang_tidy_scan.sh warning-as-error diff-to-main

iox2_common_build_debug_template: &IOX2_COMMON_BUILD_DEBUG
  build_script: cargo build --workspace --all-targets

iox2_common_build_and_test_debug_template: &IOX2_COMMON_BUILD_AND_TEST_DEBUG
  <<: *IOX2_COMMON_BUILD_DEBUG
  test_script: cargo nextest run --workspace --all-targets --no-fail-fast

iox2_common_build_release_template: &IOX2_COMMON_BUILD_RELEASE
  build_script: cargo build --release --workspace --all-targets

iox2_common_build_and_test_no_doc_tests_release_template: &IOX2_COMMON_BUILD_AND_TEST_NO_DOC_TESTS_RELEASE
  <<: *IOX2_COMMON_BUILD_RELEASE
  test_script: cargo nextest run --release --tests --workspace --all-targets --no-fail-fast

iox2_ffi_common_debug_template: &IOX2_FFI_COMMON_DEBUG
  ffi_script:
    - ./internal/scripts/ci_build_and_install_iceoryx_hoofs.sh
    - cmake -S iceoryx2-ffi/c -B target/ffi/c/build -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON -DCMAKE_INSTALL_PREFIX=target/ffi/c/install -DRUST_BUILD_ARTIFACT_PATH="$( pwd )/target/debug"
    - cmake --build target/ffi/c/build
    - cmake --install target/ffi/c/build
    - target/ffi/c/build/tests/iceoryx2-c-tests
    - cmake -S iceoryx2-ffi/cxx -B target/ffi/cxx/build -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON -DCMAKE_PREFIX_PATH=$( pwd )/target/ffi/c/install -DCMAKE_INSTALL_PREFIX=target/ffi/cxx/install
    - cmake --build target/ffi/cxx/build
    - cmake --install target/ffi/cxx/build
    - cmake -S examples/c -B target/ffi/out-of-tree-c -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH="$( pwd )/target/ffi/c/install"
    - cmake --build target/ffi/out-of-tree-c
    - git clone --depth 1 --branch v2.95.5 https://github.com/eclipse-iceoryx/iceoryx.git target/iceoryx/src
    - cmake -S target/iceoryx/src/iceoryx_platform -B target/iceoryx/build/platform -DCMAKE_INSTALL_PREFIX=target/iceoryx/install -DCMAKE_BUILD_TYPE=Release
    - cmake --install target/iceoryx/build/platform
    - cmake -S target/iceoryx/src/iceoryx_hoofs -B target/iceoryx/build/hoofs -DCMAKE_INSTALL_PREFIX=target/iceoryx/install -DCMAKE_PREFIX_PATH="$( pwd )/target/iceoryx/install" -DCMAKE_BUILD_TYPE=Release
    - cmake --build target/iceoryx/build/hoofs
    - cmake --install target/iceoryx/build/hoofs
    - cmake -S examples/cxx -B target/ffi/out-of-tree-cxx -DCMAKE_BUILD_TYPE=Debug -DCMAKE_PREFIX_PATH="$( pwd )/target/ffi/cxx/install;$( pwd )/target/iceoryx/install"
    - cmake --build target/ffi/out-of-tree-cxx

iox2_ffi_common_release_template: &IOX2_FFI_COMMON_RELEASE
  ffi_script:
    - ./internal/scripts/ci_build_and_install_iceoryx_hoofs.sh
    - cmake -S iceoryx2-ffi/c -B target/ffi/c/build -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON -DCMAKE_INSTALL_PREFIX=target/ffi/c/install -DRUST_BUILD_ARTIFACT_PATH="$( pwd )/target/debug"
    - cmake --build target/ffi/c/build
    - cmake --install target/ffi/c/build
    - target/ffi/c/build/tests/iceoryx2-c-tests
    - cmake -S iceoryx2-ffi/cxx -B target/ffi/cxx/build -DCMAKE_BUILD_TYPE=Release -DBUILD_EXAMPLES=ON -DBUILD_TESTING=ON -DCMAKE_PREFIX_PATH=$( pwd )/target/ffi/c/install -DCMAKE_INSTALL_PREFIX=target/ffi/cxx/install
    - cmake --build target/ffi/cxx/build
    - cmake --install target/ffi/cxx/build
    - cmake -S examples/c -B target/ffi/out-of-tree-c -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$( pwd )/target/ffi/c/install"
    - cmake --build target/ffi/out-of-tree-c
    - git clone --depth 1 --branch v2.95.5 https://github.com/eclipse-iceoryx/iceoryx.git target/iceoryx/src
    - cmake -S target/iceoryx/src/iceoryx_platform -B target/iceoryx/build/platform -DCMAKE_INSTALL_PREFIX=target/iceoryx/install -DCMAKE_BUILD_TYPE=Release
    - cmake --install target/iceoryx/build/platform
    - cmake -S target/iceoryx/src/iceoryx_hoofs -B target/iceoryx/build/hoofs -DCMAKE_INSTALL_PREFIX=target/iceoryx/install -DCMAKE_PREFIX_PATH="$( pwd )/target/iceoryx/install" -DCMAKE_BUILD_TYPE=Release
    - cmake --build target/iceoryx/build/hoofs
    - cmake --install target/iceoryx/build/hoofs
    - cmake -S examples/cxx -B target/ffi/out-of-tree-cxx -DCMAKE_BUILD_TYPE=Release -DCMAKE_PREFIX_PATH="$( pwd )/target/ffi/cxx/install;$( pwd )/target/iceoryx/install"
    - cmake --build target/ffi/out-of-tree-cxx

iox2_freebsd_setup_template: &IOX2_FREEBSD_SETUP
  setup_script:
    - uname -a
    - pkg install -y git llvm
    - pw useradd testuser1
    - pw useradd testuser2
    - pw groupadd testgroup1
    - pw groupadd testgroup2
    - kldload mqueuefs
    - mkdir -p /mnt/mqueue/
    - mount -t mqueuefs null /mnt/mqueue/
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --no-modify-path
    - rustup component add clippy rustfmt

#
# Preflight-Check with Ubuntu x86 stable debug
#

preflight_check_task:
  <<: *IOX2_CONTAINER_UBUNTU_22_04_X64
  set_toolchain_script: rustup default stable
  fingerprint_script:
    - cargo audit
  # TODO iox2-#8: add more preflight-checks here
  <<: *IOX2_CARGO_FMT_AND_CLIPPY
  <<: *IOX2_CLANG_FORMAT_AND_CLANG_TIDY
  <<: *IOX2_COMMON_BUILD_DEBUG # only build without tests to not slow down other tasks due to failures in flaky tests
  doc_script: cargo doc

#
# Ubuntu x86
#

# Pipeline 1

# TODO iox2-#8: Add code coverage
# ubuntu_22_04_x64_stable_debug_coverage_task:
#   depends_on: preflight_check
#   <<: *IOX2_CONTAINER_UBUNTU_22_04_X64
#   set_toolchain_script: rustup default stable
#   <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

# Pipeline 2

ubuntu_22_04_x64_min_version_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_UBUNTU_22_04_X64
  set_toolchain_script: rustup default 1.81.0
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG
  linux_only_doc_test_script: cargo test --doc -- --ignored

ubuntu_22_04_x64_stable_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_UBUNTU_22_04_X64
  set_toolchain_script: rustup default stable
  <<: *IOX2_CARGO_FMT_AND_CLIPPY
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG
  linux_only_doc_test_script: cargo test --doc -- --ignored

ubuntu_22_04_x64_beta_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: ubuntu_22_04_x64_stable_debug
  <<: *IOX2_CONTAINER_UBUNTU_22_04_X64
  set_toolchain_script: rustup default beta
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

ubuntu_22_04_x64_nightly_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: ubuntu_22_04_x64_beta_debug
  allow_failures: true
  <<: *IOX2_CONTAINER_UBUNTU_22_04_X64
  set_toolchain_script: rustup default nightly
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

# Pipeline 3

ubuntu_22_04_x64_stable_release_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_UBUNTU_22_04_X64
  set_toolchain_script: rustup default stable
  <<: *IOX2_COMMON_BUILD_AND_TEST_NO_DOC_TESTS_RELEASE

#
# Ubuntu aarch64
#

# Pipeline 4

ubuntu_22_04_aarch64_min_version_debug_task:
  only_if: false
  depends_on: preflight_check
  skip: "changesIncludeOnly('.github/**', '**.md')"
  <<: *IOX2_CONTAINER_UBUNTU_22_04_AARCH64
  set_toolchain_script: rustup default 1.81.0
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

ubuntu_22_04_aarch64_stable_debug_task:
  depends_on: preflight_check
  skip: "changesIncludeOnly('.github/**', '**.md')"
  <<: *IOX2_CONTAINER_UBUNTU_22_04_AARCH64
  set_toolchain_script: rustup default stable
  <<: *IOX2_CARGO_FMT_AND_CLIPPY
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG
  <<: *IOX2_FFI_COMMON_DEBUG

ubuntu_22_04_aarch64_beta_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: ubuntu_22_04_aarch64_stable_debug
  skip: "changesIncludeOnly('.github/**', '**.md')"
  allow_failures: true
  <<: *IOX2_CONTAINER_UBUNTU_22_04_AARCH64
  set_toolchain_script: rustup default beta
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

# Pipeline 5

ubuntu_22_04_aarch64_stable_release_task:
  only_if: false
  depends_on: preflight_check
  skip: "changesIncludeOnly('.github/**', '**.md')"
  <<: *IOX2_CONTAINER_UBUNTU_22_04_AARCH64
  set_toolchain_script: rustup default stable
  <<: *IOX2_COMMON_BUILD_AND_TEST_NO_DOC_TESTS_RELEASE
  <<: *IOX2_FFI_COMMON_RELEASE

#
# Arch Linux x86
#

# Pipeline 6

arch_linux_x64_stable_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  skip: "changesIncludeOnly('.github/**', '**.md')"
  <<: *IOX2_CONTAINER_ARCH_LINUX_X64
  set_toolchain_script: rustup default stable
  <<: *IOX2_CARGO_FMT_AND_CLIPPY
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG
  <<: *IOX2_FFI_COMMON_DEBUG

arch_linux_x64_beta_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: arch_linux_x64_stable_debug
  skip: "changesIncludeOnly('.github/**', '**.md')"
  <<: *IOX2_CONTAINER_ARCH_LINUX_X64
  set_toolchain_script: rustup default beta
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

# Pipeline 7

arch_linux_x64_stable_release_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_ARCH_LINUX_X64
  set_toolchain_script: rustup default stable
  <<: *IOX2_COMMON_BUILD_AND_TEST_NO_DOC_TESTS_RELEASE
  <<: *IOX2_FFI_COMMON_RELEASE

#
# Windows Server 2019 x86
#

# Pipeline 8

windows_server_2019_x64_stable_debug_task:
  # TODO iox2-#43: fix iceoryx2_cal list (underlying shm) tests
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_WINDOWS_SERVER_2019_X64
  set_toolchain_script: rustup default stable
  <<: *IOX2_CARGO_FMT_AND_CLIPPY
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

windows_server_2019_x64_stable_release_task:
  # TODO iox2-#43: fix iceoryx2_cal list (underlying shm) tests
  only_if: false
  depends_on: windows_server_2019_x64_stable_debug
  <<: *IOX2_CONTAINER_WINDOWS_SERVER_2019_X64
  set_toolchain_script: rustup default stable
  <<: *IOX2_COMMON_BUILD_AND_TEST_NO_DOC_TESTS_RELEASE

#
# FreeBSD
#

# Pipeline 9

freebsd_x64_min_version_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_FREEBSD_X64
  env:
    PATH: /root/.cargo/bin:$PATH
    HOME: /root  # must be set manually to '/root' or 'rustup' will throw an error
  <<: *IOX2_FREEBSD_SETUP
  set_toolchain_script: rustup default 1.81.0
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

freebsd_x64_stable_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_FREEBSD_X64
  env:
    PATH: /root/.cargo/bin:$PATH
    HOME: /root  # must be set manually to '/root' or 'rustup' will throw an error
  <<: *IOX2_FREEBSD_SETUP
  set_toolchain_script: rustup default stable
  <<: *IOX2_CARGO_FMT_AND_CLIPPY
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

#
# macOS
#

# Pipeline 10

macos_aarch64_min_version_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_MACOS_AARCH64
  env:
    PATH: /Users/admin/.cargo/bin:$PATH
  setup_script:
    - uname -a
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --no-modify-path
    - rustup component add clippy rustfmt
  set_toolchain_script: rustup default 1.81.0
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG

macos_aarch64_stable_debug_task:
  # TODO commented out due to limited CI time
  only_if: false
  depends_on: preflight_check
  <<: *IOX2_CONTAINER_MACOS_AARCH64
  env:
    PATH: /Users/admin/.cargo/bin:$PATH
  setup_script:
    - uname -a
    - curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --no-modify-path
    - rustup component add clippy rustfmt
  set_toolchain_script: rustup default stable
  <<: *IOX2_CARGO_FMT_AND_CLIPPY
  <<: *IOX2_COMMON_BUILD_AND_TEST_DEBUG
